// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String       @id @default(cuid())
    name          String?
    email         String?      @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    chats         Chat[]
    messages      Message[]
    attachments   Attachment[]
    createdAt     DateTime     @default(now())
    updatedAt     DateTime     @updatedAt
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Chat {
    id        String    @id @default(cuid())
    title     String
    userId    String
    user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
    messages  Message[]
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
}

model Message {
    id          String       @id @default(cuid())
    content     String       @db.Text
    role        MessageRole
    chatId      String
    chat        Chat         @relation(fields: [chatId], references: [id], onDelete: Cascade)
    userId      String
    user        User         @relation(fields: [userId], references: [id], onDelete: Cascade)
    attachments Attachment[]
    createdAt   DateTime     @default(now())
    updatedAt   DateTime     @updatedAt
}

model Attachment {
  id            String   @id @default(cuid())
  filename      String
  originalName  String
  mimeType      String
  size          Int
  url           String
  extractedText String?  @db.Text
  metadata      Json?
  messageId     String?
  userId        String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  message Message? @relation(fields: [messageId], references: [id], onDelete: Cascade)
  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([messageId])
  @@index([userId])
}

enum MessageRole {
    USER
    ASSISTANT
    SYSTEM
}